name: main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install FFmpeg - linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:savoury1/ffmpeg4 -y
          sudo add-apt-repository ppa:savoury1/ffmpeg5 -y
          sudo apt update
          sudo apt install ffmpeg -y
      - name: Build
        run: |
          dotnet build -c Release
      - name: Test
        run: |
          dotnet test -c Release
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          path: FFmpeg.AutoGen/bin/Release/*.nupkg
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          path: FFmpeg.AutoGen/bin/Release/*.snupkg
          if-no-files-found: error
      - name: Codegen Build & Test
        if: matrix.os == 'windows-latest'
        run: |
          dotnet run -c Release -p FFmpeg.AutoGen.CppSharpUnsafeGenerator --
          dotnet build FFmpeg.AutoGen